#!/bin/sh
#
# Copyright (c) 2015, Linaro Limited
# All rights reserved.
#
# SPDX-License-Identifier:	BSD-3-Clause
#

# directories where pktio_main binary can be found:
# -in the validation dir when running make check (intree or out of tree)
# -in the script directory, when running after 'make install', or
# -in the validation when running standalone (./pktio_run) intree.
# -in the current directory.
# running stand alone out of tree requires setting PATH
PATH=$(pwd)/pktio:$PATH

pktio_path=$(which pktio${EXEEXT})
if [ -x "$pktio_path" ] ; then
	echo "running with pktio: $pktio_run_path"
else
	echo "cannot find pktio: please set you PATH for it."
fi

# directory where platform test sources are, including scripts
TEST_SRC_DIR=$(dirname $0)

# exit codes expected by automake for skipped tests
TEST_SKIPPED=77


run_test()
{
	local ret=0
	BOARD_TYPE=$(cat /mppa/board0/type)

	IO0_LOOPS=" e0:loop:tags=100 -- e0:loop:jumbo:tags=100 -- e0p0:loop:tags=100"
	IO1_LOOPS=" e1:loop:tags=100 -- e1:loop:jumbo:tags=100 -- e0p1:loop:tags=100"
	COMMON="cluster0:tags=100 -- loop "
	case "$BOARD_TYPE" in
		"ab01")
			IFLIST="$IO0_LOOPS -- $IO1_LOOPS -- $COMMON"
			;;
		"ab04")
			IFLIST="e0p0 e0p1 -- $IO0_LOOPS -- $IO1_LOOPS -- $COMMON"
			;;
		"konic80")
			IFLIST="e0 e1 -- e1:min_payload=48:max_payload=48 e0 -- e0:jumbo e1:jumbo -- e1:jumbo e0:jumbo -- $IO0_LOOPS -- $IO1_LOOPS -- $COMMON"
			;;
		"emb01")
			IFLIST="e0p0 e0p1 -- e0p1 e0p0 -- e0p0:jumbo e0p1:jumbo -- e0p1:jumbo e0p0:jumbo -- $IO0_LOOPS -- $IO1_LOOPS -- $COMMON"
			;;
		"explorer")
			IFLIST="$IO1_LOOPS -- $COMMON"
			;;
		"")
			IFLIST="loop"
			;;
		*)
			IFLIST="loop"
			;;
	esac
	if [ "$RUN_TARGET" == "k1-cluster" ]; then
		IFLIST="loop"
	fi
	if [ "$ODP_PKTIO_IF0" != "" ]; then
		IFLIST=${ODP_PKTIO_IF0}
	fi

	${TARGET_RUNNER} $(which pktio${EXEEXT}) ${IFLIST}
	if [ $? -ne 0 ]; then
	    echo "Trying once more just in case"
	    ${TARGET_RUNNER} $(which pktio${EXEEXT}) ${IFLIST}
	    if [ $? -ne 0 ]; then
		ret=1
	    fi
	fi

	if [ $ret -ne 0 ]; then
		echo "!!! FAILED !!!"
	fi

	exit $ret
}

run()
{
	run_test
}

case "$1" in
	setup)   ;;
	cleanup) ;;
	*)       run ;;
esac
