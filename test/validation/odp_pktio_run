#!/bin/sh
#
# Copyright (c) 2015, Linaro Limited
# All rights reserved.
#
# SPDX-License-Identifier:	BSD-3-Clause
#

# TEST_DIR is set by Makefile to point to the directory where binaries have been
# built (Makefile variable builddir)
# If TEST_DIR is not set it means we are not running with make, and in this case
# there are two situations:
# 1. user build ODP in the same dir as the source (most likely)
#    here the user can simply call odp_pktio_run
# 2. user may have built ODP in a separate build dir (like bitbake usually does)
#    here the user has to do something like $ODP/test/validation/odp_pktio_run
#
# In both situations the script assumes that the user is in the directory where
# odp_pktio exists. If that's not true, then the user has to specify the path
# to it and run:
# TEST_DIR=$builddir $ODP/test/validation/odp_pktio_run

# directory where test binaries have been built
TEST_DIR="${TEST_DIR:-$PWD}"
# directory where test sources are, including scripts
TEST_SRC_DIR=$(dirname $0)

PATH=$TEST_DIR:$PATH

# exit codes expected by automake for skipped tests
TEST_SKIPPED=77

# Use installed pktio env or for make check take it from platform directory
if [ -f "./pktio_env" ]; then
	. ./pktio_env
elif  [ "$ODP_PLATFORM" = "" ]; then
	echo "$0: error: ODP_PLATFORM must be defined"
	# not skipped as this should never happen via "make check"
	exit 1
elif [ -f ${TEST_SRC_DIR}/../../platform/$ODP_PLATFORM/test/pktio_env ]; then
	. ${TEST_SRC_DIR}/../../platform/$ODP_PLATFORM/test/pktio_env
else
	echo "BUG: unable to find pktio_env!"
	echo "pktio_env has to be in current directory or in platform/\$ODP_PLATFORM/test."
	echo "ODP_PLATFORM=\"$ODP_PLATFORM\""
	exit 1
fi

run_test()
{
	local ret=0

	# the linux-generic implementation uses environment variables to
	# control which socket method is used, so try each combination to
	# ensure decent coverage.
	for distype in MMAP MMSG BASIC; do
		unset ODP_PKTIO_DISABLE_SOCKET_${distype}
	done

	for distype in SKIP MMAP MMSG; do
		if [ "$disabletype" != "SKIP" ]; then
			export ODP_PKTIO_DISABLE_SOCKET_${distype}=y
		fi
		odp_pktio
		if [ $? -ne 0 ]; then
			ret=1
		fi
	done

	if [ $ret -ne 0 ]; then
		echo "!!! FAILED !!!"
	fi

	exit $ret
}

run()
{
	if [ "$ODP_PLATFORM" != "linux-generic" -o "$(id -u)" != "0" ]; then
		echo "pktio: using 'loop' device"
		${TARGET_RUNNER} odp_pktio
		exit $?
	fi

	if [ "$ODP_PKTIO_IF0" = "" ]; then
		# no interfaces specified on linux-generic, use defaults
		setup_pktio_env clean
		export ODP_PKTIO_IF0=$IF0
		export ODP_PKTIO_IF1=$IF1
	fi

	run_test
}

case "$1" in
	setup)   setup_pktio_env   ;;
	cleanup) cleanup_pktio_env ;;
	*)       run ;;
esac
